{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\OneDrive\\\\DOT BATCH_LOVE BABBAR\\\\9_REACT\\\\64_revision\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [name, setName] = useState('love');\n\n  // variation 1 -> Every Reader\n  // useEffect( () => {\n  //   console.log(\"UI RENDERING DONE\");\n  // });\n\n  // variation 2 -> First Render\n  // useEffect( () => {\n  //   console.log(\"UI RENDERED\");\n  // },[]);\n  // here the second arg is the dependency list\n\n  // varitaion 3 -> on first render + whenever dependecy changes\n  // useEffect( () => {\n  //   console.log(\"change observed\")\n  // }, [name]);\n\n  // variation 4 -> to handle unmounting of a component\n  useEffect(() => {\n    // add event listner\n    console.log(\"listner added\");\n    return () => {\n      console.log(\"listner removed\");\n    };\n  }, [text]);\n  function changeHandler(event) {\n    console.log(text);\n    setText(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o8iyRsli1C/GVjVuws8r0MrBaso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","text","setText","name","setName","useEffect","console","log","changeHandler","event","target","value","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rahul/OneDrive/DOT BATCH_LOVE BABBAR/9_REACT/64_revision/src/App.jsx"],"sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const[text, setText] = useState('');\r\n  const[name, setName] = useState('love');\r\n\r\n  // variation 1 -> Every Reader\r\n  // useEffect( () => {\r\n  //   console.log(\"UI RENDERING DONE\");\r\n  // });\r\n\r\n  // variation 2 -> First Render\r\n  // useEffect( () => {\r\n  //   console.log(\"UI RENDERED\");\r\n  // },[]);\r\n  // here the second arg is the dependency list\r\n\r\n  // varitaion 3 -> on first render + whenever dependecy changes\r\n  // useEffect( () => {\r\n  //   console.log(\"change observed\")\r\n  // }, [name]);\r\n\r\n  // variation 4 -> to handle unmounting of a component\r\n  useEffect( () => {\r\n    // add event listner\r\n    console.log(\"listner added\");\r\n\r\n    return () =>{\r\n      console.log(\"listner removed\");\r\n    }\r\n  }, [text]);\r\n\r\n  function changeHandler(event){\r\n    console.log(text);\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      <input type='text' onChange={changeHandler}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAK,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;;EAEvC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACAS,SAAS,CAAE,MAAM;IACf;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAE5B,OAAO,MAAK;MACVD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,SAASO,aAAaA,CAACC,KAAK,EAAC;IAC3BH,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjBC,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChD;AAEV;AAACnB,EAAA,CAzCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}